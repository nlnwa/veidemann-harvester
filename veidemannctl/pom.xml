<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>veidemann</artifactId>
        <groupId>no.nb.nna</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <groupId>no.nb.nna</groupId>
    <artifactId>veidemannctl</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>mvn-golang</packaging>

    <name>Veidemann CLI</name>
    <description>Command line client for Veidemann</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>no.nb.nna</groupId>
            <artifactId>veidemann-api</artifactId>
            <classifier>golang</classifier>
            <version>${project.version}</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <sourceDirectory>${basedir}${file.separator}src</sourceDirectory>
        <directory>${basedir}${file.separator}bin</directory>
        <resources>
            <resource>
                <directory>${basedir}${file.separator}res</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>com.igormaznitsa</groupId>
                <artifactId>mvn-golang-wrapper</artifactId>
                <version>${go.wrapper.plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <goVersion>${go.sdk.version}</goVersion>
                    <!--<goPath>${basedir}</goPath>-->
                    <!--                    <addToGoPath>
                        <path>${basedir}/extrasources</path>
                    </addToGoPath>-->
                    <enforceGoPathToEnd>false</enforceGoPathToEnd>
                    <!--<verbose>true</verbose>-->
                    <customCommand>env</customCommand>
                </configuration>
                <executions>
                    <execution>
                        <id>default-get</id>
                        <configuration>
                            <!--                            <buildFlags>
                                <flag>-u</flag>
                            </buildFlags>-->
                            <packages>
                                <package>google.golang.org/grpc</package>
                                <package>github.com/spf13/cobra</package>
                                <package>github.com/spf13/viper</package>
                                <package>github.com/mitchellh/go-homedir</package>
                                <package>github.com/ghodss/yaml</package>
                                <package>github.com/buger/goterm</package>
                                <package>github.com/coreos/go-oidc</package>
                                <package>github.com/sirupsen/logrus</package>
                                <package>github.com/jteeuwen/go-bindata/...</package>
                                <package>github.com/inconshreveable/mousetrap</package>
                            </packages>
                        </configuration>
                    </execution>
                    <!-- This execution will block default build process -->
                    <execution>
                        <id>default-build</id>
                        <phase>none</phase>
                    </execution>
                     <!--Build 64 bit versions for linux, windows and mac-->
                    <execution>
                        <id>build-for-linux64</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <targetOs>linux</targetOs>
                            <targetArch>amd64</targetArch>
                            <resultFolder>${project.build.directory}/linux/amd64</resultFolder>
                            <resultName>${project.build.finalName}</resultName>
                            <packages>
                                <main>veidemannctl/main.go</main>
                            </packages>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-for-windows64</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <strip>true</strip>
                            <targetOs>windows</targetOs>
                            <targetArch>amd64</targetArch>
                            <resultFolder>${project.build.directory}/windows/amd64</resultFolder>
                            <resultName>${project.build.finalName}.exe</resultName>
                            <packages>
                                <main>veidemannctl/main.go</main>
                            </packages>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-for-macos64</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <strip>true</strip>
                            <targetOs>darwin</targetOs>
                            <targetArch>amd64</targetArch>
                            <resultFolder>${project.build.directory}/darwin/amd64</resultFolder>
                            <resultName>${project.build.finalName}</resultName>
                            <packages>
                                <main>veidemannctl/main.go</main>
                            </packages>
                        </configuration>
                    </execution>
                    <!--Build 32 bit versions for linux, windows and mac-->
                    <!--<execution>-->
                        <!--<id>build-for-linux386</id>-->
                        <!--<goals>-->
                            <!--<goal>build</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<targetOs>linux</targetOs>-->
                            <!--<targetArch>386</targetArch>-->
                            <!--<resultFolder>${project.build.directory}/linux/386</resultFolder>-->
                            <!--<resultName>${project.build.finalName}</resultName>-->
                            <!--<packages>-->
                                <!--<main>veidemannctl/main.go</main>-->
                            <!--</packages>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>build-for-windows386</id>-->
                        <!--<goals>-->
                            <!--<goal>build</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<strip>true</strip>-->
                            <!--<targetOs>windows</targetOs>-->
                            <!--<targetArch>386</targetArch>-->
                            <!--<resultFolder>${project.build.directory}/windows/386</resultFolder>-->
                            <!--<resultName>${project.build.finalName}.exe</resultName>-->
                            <!--<packages>-->
                                <!--<main>veidemannctl/main.go</main>-->
                            <!--</packages>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>build-for-macos386</id>-->
                        <!--<goals>-->
                            <!--<goal>build</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<strip>true</strip>-->
                            <!--<targetOs>darwin</targetOs>-->
                            <!--<targetArch>386</targetArch>-->
                            <!--<resultFolder>${project.build.directory}/darwin/386</resultFolder>-->
                            <!--<resultName>${project.build.finalName}</resultName>-->
                            <!--<packages>-->
                                <!--<main>veidemannctl/main.go</main>-->
                            <!--</packages>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeClassifiers>golang</includeClassifiers>
                            <includes>**/*.go</includes>
                            <outputDirectory>${basedir}/src</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <markersDirectory>${basedir}/tmp</markersDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <followSymLinks>false</followSymLinks>
                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                    <filesets>
                        <fileset>
                            <directory>${basedir}/tmp</directory>
                        </fileset>
                        <fileset>
                            <directory>${basedir}/pkg</directory>
                        </fileset>
                        <fileset>
                            <directory>${basedir}/src/veidemann_api</directory>
                        </fileset>
                        <fileset>
                            <directory>${basedir}/src/veidemannctl/bindata</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!--            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <id>save-result-as-artifact</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${basedir}${file.separator}bin${file.separator}${project.build.finalName}</file>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}-result</artifactId>
                            <version>${project.version}</version>
                            <packaging>bin</packaging>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>
    </build>

</project>
